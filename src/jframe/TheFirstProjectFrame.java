/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jframe;

import java.util.*;
import java.lang.*;
import java.io.*;
/**
 *
 * @author Michael
 */
public class TheFirstProjectFrame extends javax.swing.JFrame {

    /**
     * Creates new form TheFirstProjectFrame
     */
    public TheFirstProjectFrame() {
        //initialize variables
        this.input = "";
        this.error = "Error";
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public ArrayList<String> convert(String sa){//this method converts a inputted string to an arraylist of operations, parentheses and numbers, which become evaluated recursively in the evaluate method
        ArrayList<String> ans = new ArrayList<>();
        Set<String> num = new HashSet<>();//set of possible numerical strings
        num.add("0");
        num.add("1");
        num.add("2");
        num.add("3");
        num.add("4");
        num.add("5");
        num.add("6");
        num.add("7");
        num.add("8");
        num.add("9");
        num.add(".");
        if(sa.length()==0){
            return ans;
        }
        String cur = sa.substring(0,1);
        String x;
        String y;
        for(int i = 1;i<sa.length();i++){
            x=sa.substring(i-1,i);
            y=sa.substring(i,i+1);
            if(num.contains(x)&&num.contains(y)){
                cur=cur+y;
            }else{
                ans.add(cur);
                cur=y;
            }
        }
        ans.add(cur);//above code chops up code into strings of parentheses, numerical (including decimal) strings, and operations
        return ans;
    }
    public String evaluate(ArrayList<String> s){
        if(s.isEmpty()){
            System.out.println(0);
            return error;
        }//inputting nothing should be an error
        int c = 0;
        boolean paren = true;
        int a = -1;//index of left paren
        int b = -1;//index of right paren
        while(paren){//this loop searches for pairs of parentheses
            a=-1;
            b=-1;
            c=0;
            paren = false;//do we have any parentheses? if not, the loop can stop
            for(int i = 0;i<s.size();i++){
                if(a==-1&&s.get(i).equals("(")){
                    a=i;
                    paren = true;
                }
                if(s.get(i).equals("(")){
                    c++;
                }
                if(s.get(i).equals(")")){
                    c--;
                }
                if(a!=-1&&c==0){
                    b=i;
                    break;
                }
            }
            if(a!=-1){
                if(b==-1){
                    System.out.println(1);
                    return error;//mistmatched parentheses
                }
                else{
                    ArrayList<String> wombo = new ArrayList<>();
                    for(int i = a+1;i<b;i++){
                        wombo.add(s.get(i));
                    }
                    String middle = evaluate(wombo);//we evaluate recursively what is inside one set of parentheses, and turn it into a number for the main string
                    s.subList(a,b+1).clear();
                    s.add(a,middle);
                    return evaluate(s);
                }
            }
        }
        int n = s.size();
        //implement PEMDAS
        for(int i = 0;i<n-1;i++){//make sure the string is actually an alternating sequence of numbers and operations
            String first = s.get(i);
            String second = s.get(i+1);
            boolean firstop = (first.equals("+")||first.equals("-")||first.equals("/")||first.equals("*"));
            boolean secondop = (second.equals("+")||second.equals("-")||second.equals("/")||second.equals("*"));
            if((firstop&&secondop) || ((!firstop)&& (!secondop))){
                System.out.println(first + " " + second + " " + i);
                System.out.println(firstop + " " + secondop);
                System.out.println(2);
                return error;
            }
        }
        if(s.get(0).equals("-")){//change an initial minus sign to a negative sign for the first number
            s.add(0, "0");
        }
        if(s.get(0).equals("+")||s.get(0).equals("/")||s.get(0).equals("*")){//if there is an initial non-minus sign, give an error
            System.out.println(3);
            return error;
        }
        n=s.size();
        if(s.get(n-1).equals("+")||s.get(n-1).equals("/")||s.get(n-1).equals("*")||s.get(n-1).equals("-")){//if there are trailing operations, give an error
            System.out.println(12);
            return error;
        }
        int k = (n+1)/2;
        int j = 0;
        for(int i = 0;i<k-1;i++){//parse multiplication and division for pemdas
            System.out.println(s);
            if(s.get(i*2+1).equals("*")){
                double first = Double.parseDouble(s.get(i*2));
                double second = Double.parseDouble(s.get(i*2+2));
                String combo = String.valueOf(first*second);
                s.set(i*2+2,combo);
                j++;
            }
            if(s.get(i*2+1).equals("/")){
                double first = Double.parseDouble(s.get(i*2));
                double second = Double.parseDouble(s.get(i*2+2));
                if(Math.abs(second)<eps){
                    System.out.println(4);
                    return error;
                }
                String combo = String.valueOf(first/second);
                s.set(i*2+2,combo);
                j++;
            }
        }
        for(int i = j;i<k-1;i++){//parse addition and subtraction
            System.out.println(s);
            if(s.get(i*2+1).equals("+")){
                double first = Double.parseDouble(s.get(i*2));
                double second = Double.parseDouble(s.get(i*2+2));
                String combo = String.valueOf(first+second);
                s.set(i*2+2,combo);
            }
            if(s.get(i*2+1).equals("-")){
                double first = Double.parseDouble(s.get(i*2));
                double second = Double.parseDouble(s.get(i*2+2));
                String combo = String.valueOf(first-second);
                s.set(i*2+2,combo);
            }
            
        }
        System.out.println(s);
        return String.valueOf(s.get(s.size()-1));
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        oneButton = new javax.swing.JButton();
        twoButton = new javax.swing.JButton();
        plusButton = new javax.swing.JButton();
        equalsButton = new javax.swing.JButton();
        minusButton = new javax.swing.JButton();
        threeButton = new javax.swing.JButton();
        zeroButton = new javax.swing.JButton();
        fiveButton = new javax.swing.JButton();
        sixButton = new javax.swing.JButton();
        sevenButton = new javax.swing.JButton();
        eightButton = new javax.swing.JButton();
        nineButton = new javax.swing.JButton();
        pointButton = new javax.swing.JButton();
        fourButton = new javax.swing.JButton();
        timesButton = new javax.swing.JButton();
        divideButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        leftParenButton = new javax.swing.JButton();
        rightParenButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("0");

        oneButton.setText("1");
        oneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneButtonActionPerformed(evt);
            }
        });

        twoButton.setText("2");
        twoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoButtonActionPerformed(evt);
            }
        });

        plusButton.setText("+");
        plusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButtonActionPerformed(evt);
            }
        });

        equalsButton.setText("=");
        equalsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsButtonActionPerformed(evt);
            }
        });

        minusButton.setText("-");
        minusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButtonActionPerformed(evt);
            }
        });

        threeButton.setText("3");
        threeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeButtonActionPerformed(evt);
            }
        });

        zeroButton.setText("0");
        zeroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroButtonActionPerformed(evt);
            }
        });

        fiveButton.setText("5");
        fiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveButtonActionPerformed(evt);
            }
        });

        sixButton.setText("6");
        sixButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixButtonActionPerformed(evt);
            }
        });

        sevenButton.setText("7");
        sevenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenButtonActionPerformed(evt);
            }
        });

        eightButton.setText("8");
        eightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightButtonActionPerformed(evt);
            }
        });

        nineButton.setText("9");
        nineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineButtonActionPerformed(evt);
            }
        });

        pointButton.setText(".");
        pointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointButtonActionPerformed(evt);
            }
        });

        fourButton.setText("4");
        fourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourButtonActionPerformed(evt);
            }
        });

        timesButton.setText("*");
        timesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timesButtonActionPerformed(evt);
            }
        });

        divideButton.setText("/");
        divideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideButtonActionPerformed(evt);
            }
        });

        clearButton.setText("C");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        leftParenButton.setText("(");
        leftParenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftParenButtonActionPerformed(evt);
            }
        });

        rightParenButton.setText(")");
        rightParenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightParenButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sevenButton)
                            .addComponent(fourButton)
                            .addComponent(oneButton)
                            .addComponent(zeroButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(leftParenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eightButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fiveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(twoButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rightParenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nineButton)
                            .addComponent(sixButton)
                            .addComponent(threeButton)
                            .addComponent(pointButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timesButton)
                            .addComponent(divideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(plusButton)
                            .addComponent(equalsButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, Short.MAX_VALUE)))
                .addGap(177, 177, 177))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fourButton, oneButton, sevenButton, zeroButton});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {nineButton, pointButton, rightParenButton, sixButton, threeButton});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {divideButton, equalsButton, minusButton, plusButton, timesButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(leftParenButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rightParenButton)
                    .addComponent(divideButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eightButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nineButton)
                    .addComponent(sevenButton)
                    .addComponent(timesButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minusButton)
                    .addComponent(sixButton)
                    .addComponent(fourButton)
                    .addComponent(fiveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(threeButton)
                    .addComponent(oneButton)
                    .addComponent(twoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(plusButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zeroButton)
                    .addComponent(pointButton)
                    .addComponent(equalsButton))
                .addGap(94, 94, 94))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {fourButton, oneButton, sevenButton, zeroButton});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {nineButton, pointButton, rightParenButton, sixButton, threeButton});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {divideButton, equalsButton, minusButton, plusButton, timesButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void oneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneButtonActionPerformed
        input = input + "1";
        jLabel1.setText(input);
    }//GEN-LAST:event_oneButtonActionPerformed

    private void plusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButtonActionPerformed
        input = input + "+";
        jLabel1.setText(input);
    }//GEN-LAST:event_plusButtonActionPerformed

    private void twoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoButtonActionPerformed
        input = input + "2";
        jLabel1.setText(input);
    }//GEN-LAST:event_twoButtonActionPerformed

    private void equalsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsButtonActionPerformed
        input = evaluate(convert(input));
        jLabel1.setText(input);
    }//GEN-LAST:event_equalsButtonActionPerformed

    private void minusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButtonActionPerformed
        input = input + "-";
        jLabel1.setText(input);
    }//GEN-LAST:event_minusButtonActionPerformed

    private void threeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeButtonActionPerformed
        input = input + "3";
        jLabel1.setText(input);
    }//GEN-LAST:event_threeButtonActionPerformed

    private void zeroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroButtonActionPerformed
        input = input + "0";
        jLabel1.setText(input);
    }//GEN-LAST:event_zeroButtonActionPerformed

    private void fourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourButtonActionPerformed
        input = input + "4";
        jLabel1.setText(input);
    }//GEN-LAST:event_fourButtonActionPerformed

    private void timesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timesButtonActionPerformed
        input = input + "*";
        jLabel1.setText(input);
    }//GEN-LAST:event_timesButtonActionPerformed

    private void fiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveButtonActionPerformed
        input = input + "5";
        jLabel1.setText(input);
    }//GEN-LAST:event_fiveButtonActionPerformed

    private void sixButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixButtonActionPerformed
        input = input + "6";
        jLabel1.setText(input);
    }//GEN-LAST:event_sixButtonActionPerformed

    private void sevenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenButtonActionPerformed
        input = input + "7";
        jLabel1.setText(input);
    }//GEN-LAST:event_sevenButtonActionPerformed

    private void eightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightButtonActionPerformed
        // TODO add your handling code here:
        input = input + "8";
        jLabel1.setText(input);
    }//GEN-LAST:event_eightButtonActionPerformed

    private void nineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineButtonActionPerformed
        input = input + "9";
        jLabel1.setText(input);
    }//GEN-LAST:event_nineButtonActionPerformed

    private void pointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointButtonActionPerformed
        input = input + ".";
        jLabel1.setText(input);
    }//GEN-LAST:event_pointButtonActionPerformed

    private void divideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideButtonActionPerformed
        input = input + "/";
        jLabel1.setText(input);
    }//GEN-LAST:event_divideButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        input = "";
        jLabel1.setText("0");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void leftParenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftParenButtonActionPerformed
        input = input + "(";
        jLabel1.setText(input);
    }//GEN-LAST:event_leftParenButtonActionPerformed

    private void rightParenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightParenButtonActionPerformed
        // TODO add your handling code here:
        input = input + ")";
        jLabel1.setText(input);
    }//GEN-LAST:event_rightParenButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TheFirstProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TheFirstProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TheFirstProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TheFirstProjectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TheFirstProjectFrame().setVisible(true);
            }
        });
    }
    String input;
    String error;
    double eps = 0.000001;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JButton divideButton;
    private javax.swing.JButton eightButton;
    private javax.swing.JButton equalsButton;
    private javax.swing.JButton fiveButton;
    private javax.swing.JButton fourButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton leftParenButton;
    private javax.swing.JButton minusButton;
    private javax.swing.JButton nineButton;
    private javax.swing.JButton oneButton;
    private javax.swing.JButton plusButton;
    private javax.swing.JButton pointButton;
    private javax.swing.JButton rightParenButton;
    private javax.swing.JButton sevenButton;
    private javax.swing.JButton sixButton;
    private javax.swing.JButton threeButton;
    private javax.swing.JButton timesButton;
    private javax.swing.JButton twoButton;
    private javax.swing.JButton zeroButton;
    // End of variables declaration//GEN-END:variables
}
